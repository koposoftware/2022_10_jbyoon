<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="acctbook.dao.acctbookDAO"> 

	<resultMap type="calVO" id="calMap">
		<result column="SET_YM" property="setYM"/>
		<result column="MEMBER_ID" property="memberId"/>
		<result column="CATEGORY_CD" property="categoryCd"/>	
		<result column="OPPONENT_NAME" property="opponentName"/>
		<result column="BANK_ACCT_ALIAS" property="bankAcctAlias"/>
		<result column="TRAN_TYPE" property="tranType"/>
		<result column="TRAN_METHOD" property="tranMethod"/>
		<result column="CONTENT" property="content"/>
		<result column="BALANCE" property="balance"/>
		<result column="BANK_ACCT_NUM" property="bankAcctNum"/>
		<result column="AMOUNT" property="amount"/>
		<result column="TRAN_DT" property="tranDt"/>
	</resultMap>

	<insert id="CASHBOOK_INSERT_MYSELF" parameterType="calVO" statementType="CALLABLE">
        <![CDATA[
	        { call CASHBOOK_INSERT_MYSELF (
	                #{amount, mode=IN},
	                #{setYM, mode=IN},
	                #{memberId, mode=IN},
	                #{bankAcctNum, mode=IN},
	                #{categoryCd, mode=IN},
	                #{opponentName, mode=IN},
	                #{tranType, mode=IN},
	                #{bankAcctAlias, mode=IN},
	                #{tranMethod, mode=IN},
	                #{content, mode=IN},
	                #{tranDt, mode=IN}
	        )}
        ]]>
    </insert>

	<!-- 가장 최근 거래내역 조회 -->
	<select id="selectLatest" resultMap="calMap">
		SELECT *
		  FROM TRAN_HISTORY H
		 INNER JOIN ACCOUNTBOOK AB ON AB.NO = H.ACCOUNTBOOK_NO
		 WHERE H.NO = (SELECT MAX(NO) FROM TRAN_HISTORY)
	</select>
	
	<!-- 전체 거래내역 조회 -->
	<select id="selectAllTran" resultMap="calMap">
		SELECT *
		  FROM TRAN_HISTORY H
		 INNER JOIN ACCOUNTBOOK AB ON AB.NO = H.ACCOUNTBOOK_NO
	</select>
	
	<select id="selectDayIn" parameterType="String" resultType="String">
		SELECT NVL2(SUM(AMOUNT), SUM(AMOUNT), 0) DAYIN
		  FROM TRAN_HISTORY H
		 INNER JOIN ACCOUNTBOOK AB ON AB.NO = H.ACCOUNTBOOK_NO
		 WHERE TRAN_TYPE = '+'
		   AND SUBSTR(AB.TRAN_DT, 1, 10) = #{date}
	</select>
	
	<select id="selectDayOut" parameterType="String" resultType="String">
		SELECT NVL2(SUM(AMOUNT), SUM(AMOUNT), 0) DAYOUT
		  FROM TRAN_HISTORY H
		 INNER JOIN ACCOUNTBOOK AB ON AB.NO = H.ACCOUNTBOOK_NO
		 WHERE H.TRAN_TYPE = '-'
		   AND SUBSTR(AB.TRAN_DT, 1, 10) = #{date}
	</select>
	
    <select id="cashSelectMonthIn" resultMap="calMap">
		SELECT SUBSTR(AB.TRAN_DT, 1, 10) TRAN_DT, H.TRAN_TYPE, NVL2(SUM(AMOUNT), SUM(AMOUNT), 0) AMOUNT
		  FROM TRAN_HISTORY H
		 INNER JOIN ACCOUNTBOOK AB ON AB.NO = H.ACCOUNTBOOK_NO
		 WHERE TRAN_TYPE = '+'
		 GROUP BY SUBSTR(AB.TRAN_DT, 1, 10), H.TRAN_TYPE
		 ORDER BY TRAN_DT
	</select>
	
	<select id="cashSelectMonthOut" resultMap="calMap">
		SELECT SUBSTR(AB.TRAN_DT, 1, 10) TRAN_DT, H.TRAN_TYPE, NVL2(SUM(AMOUNT), SUM(AMOUNT), 0) AMOUNT
		  FROM TRAN_HISTORY H
		 INNER JOIN ACCOUNTBOOK AB ON AB.NO = H.ACCOUNTBOOK_NO
		 WHERE TRAN_TYPE = '-'
	 	 GROUP BY SUBSTR(AB.TRAN_DT, 1, 10), H.TRAN_TYPE
		 ORDER BY TRAN_DT
	</select>
	
	<!-- 계좌 가계부 -->
	<insert id="ACCTBOOK_INOUT" parameterType="calVO" statementType="CALLABLE">
        <![CDATA[
	        { call ACCTBOOK_INOUT (
	                #{amount, mode=IN},
	                #{setYM, mode=IN},
	                #{memberId, mode=IN},
	                #{bankAcctNum, mode=IN},
	                #{categoryCd, mode=IN},
	                #{opponentName, mode=IN},
	                #{tranType, mode=IN},
	                #{bankAcctAlias, mode=IN},
	                #{tranMethod, mode=IN},
	                #{content, mode=IN},
	                #{tranDt, mode=IN}
	        )}
        ]]>
    </insert>

    <!-- 전체 거래내역 조회 -->
	<select id="searchTranByDates" resultMap="calMap">
		SELECT *
		  FROM TRAN_HISTORY H
		 INNER JOIN ACCOUNTBOOK AB ON AB.NO = H.ACCOUNTBOOK_NO
		 WHERE BANK_ACCT_NUM = #{bankAcctNum}
           AND TRAN_DT BETWEEN #{startDt} AND #{endDt}
           AND TRAN_METHOD = '계좌'
	</select>
	
	<!-- 전체 거래내역 조회 + Filter -->
	<select id="searchTranByDatesFilter" resultMap="calMap">
		SELECT *
		  FROM TRAN_HISTORY H
		 INNER JOIN ACCOUNTBOOK AB ON AB.NO = H.ACCOUNTBOOK_NO
		 WHERE BANK_ACCT_NUM = #{bankAcctNum}
           AND TRAN_DT BETWEEN #{startDt} AND #{endDt} 
           AND CONTENT LIKE #{rcvBankAcctNum}
           AND TRAN_METHOD = '계좌'
	</select>
	
	
<!--///////////////////////////////////////-->
<!--//			 	계좌 가계부				 //-->
<!--///////////////////////////////////////-->

<!-- 일별 입금값, 일자 불러오기 -->
	<select id="acctGroupMonthIn" resultMap="calMap">
		SELECT SUBSTR(AB.TRAN_DT, 1, 10) TRAN_DT, H.TRAN_TYPE, NVL2(SUM(AMOUNT), SUM(AMOUNT), 0) AMOUNT
		  FROM TRAN_HISTORY H
		 INNER JOIN ACCOUNTBOOK AB ON AB.NO = H.ACCOUNTBOOK_NO
		 WHERE TRAN_TYPE = '+'
		   AND TRAN_METHOD = '계좌'
		 GROUP BY SUBSTR(AB.TRAN_DT, 1, 10), H.TRAN_TYPE
		 ORDER BY TRAN_DT
	</select>
	
<!-- 	<select id="acctAllMonthIn" resultMap="calMap">
		SELECT SUBSTR(AB.TRAN_DT, 1, 10) TRAN_DT
		     , H.BANK_ACCT_ALIAS
		     , AB.BANK_ACCT_NUM
		     , H.OPPONENT_NAME
		     , H.TRAN_TYPE
		     , AB.AMOUNT
		  FROM TRAN_HISTORY H
		 INNER JOIN ACCOUNTBOOK AB ON AB.NO = H.ACCOUNTBOOK_NO
		 WHERE TRAN_TYPE = '+'
		   AND TRAN_METHOD = '계좌'
		 ORDER BY TRAN_DT
	</select> -->
	
	<select id="acctPeriodIn" parameterType="calVO" resultMap="calMap">
		SELECT SUBSTR(AB.TRAN_DT, 1, 10) TRAN_DT, H.TRAN_TYPE, NVL2(SUM(AMOUNT), SUM(AMOUNT), 0) AMOUNT
		  FROM TRAN_HISTORY H
		 INNER JOIN ACCOUNTBOOK AB ON AB.NO = H.ACCOUNTBOOK_NO
		 WHERE TRAN_TYPE = '+'
		   AND TRAN_METHOD = '계좌'
		   AND BANK_ACCT_NUM = #{bankAcctNum}
		   AND TRAN_DT BETWEEN #{startDt} AND #{endDt} 
		 GROUP BY SUBSTR(AB.TRAN_DT, 1, 10), H.TRAN_TYPE
		 ORDER BY TRAN_DT
	</select>
	
<!-- 일별 출금값, 일자 불러오기 -->
	<select id="acctGroupMonthOut" resultMap="calMap">
		SELECT SUBSTR(AB.TRAN_DT, 1, 10) TRAN_DT, H.TRAN_TYPE, NVL2(SUM(AMOUNT), SUM(AMOUNT), 0) AMOUNT
		  FROM TRAN_HISTORY H
		 INNER JOIN ACCOUNTBOOK AB ON AB.NO = H.ACCOUNTBOOK_NO
		 WHERE TRAN_TYPE = '-'
		   AND TRAN_METHOD = '계좌'
		 GROUP BY SUBSTR(AB.TRAN_DT, 1, 10), H.TRAN_TYPE
		 ORDER BY TRAN_DT
	</select>
	
	<select id="acctAllMonthInOut" resultMap="calMap">
		SELECT  SUBSTR(AB.TRAN_DT, 1, 10) TRAN_DT
		     , H.BANK_ACCT_ALIAS
		     , AB.BANK_ACCT_NUM
		     , H.OPPONENT_NAME
		     , H.TRAN_TYPE
		     , AB.AMOUNT
             , H.BALANCE
		  FROM TRAN_HISTORY H
		 INNER JOIN ACCOUNTBOOK AB ON AB.NO = H.ACCOUNTBOOK_NO
         WHERE TRAN_METHOD = '계좌'
         ORDER BY H.NO
	</select>
	
	<select id="acctPeriodOut" parameterType="calVO" resultMap="calMap">
		SELECT SUBSTR(AB.TRAN_DT, 1, 10) TRAN_DT, H.TRAN_TYPE, NVL2(SUM(AMOUNT), SUM(AMOUNT), 0) AMOUNT
		  FROM TRAN_HISTORY H
		 INNER JOIN ACCOUNTBOOK AB ON AB.NO = H.ACCOUNTBOOK_NO
		 WHERE TRAN_TYPE = '-'
		   AND TRAN_METHOD = '계좌'
		   AND BANK_ACCT_NUM = #{bankAcctNum}
		   AND TRAN_DT BETWEEN #{startDt} AND #{endDt} 
		 GROUP BY SUBSTR(AB.TRAN_DT, 1, 10), H.TRAN_TYPE
		 ORDER BY TRAN_DT
	</select>
</mapper>